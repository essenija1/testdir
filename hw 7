1) Составьте список пользователей users, которые осуществили хотя бы один заказ (orders) в интернет-магазине.
оформление таблички orders

ALTER TABLE orders 
CHANGE COLUMN
user_id user_id BIGINT(10) UNSIGNED NOT NULL;

ALTER TABLE orders
ADD CONSTRAINT fk_user_id
FOREIGN KEY (user_id)
REFERENCES users(id)
ON DELETE RESTRICT
ON UPDATE RESTRICT;

ALTER TABLE orders
CHANGE COLUMN
catalog_id catalog_id BIGINT(14) UNSIGNED NOT NULL;

ALTER TABLE orders
ADD CONSTRAINT fk_catalog_id
FOREIGN KEY (catalog_id)
REFERENCES catalogs(id)
ON DELETE RESTRICT
ON UPDATE RESTRICT;

UPDATE orders
SET created_at = NOW()
WHERE created_at is NULL;

UPDATE orders
SET updated_at = NOW()
WHERE created_at is NULL;

ALTER TABLE orders_products 
CHANGE COLUMN
order_id order_id BIGINT(20) UNSIGNED NOT NULL;

ALTER TABLE orders_products 
CHANGE COLUMN
product_id product_id BIGINT(14) UNSIGNED NOT NULL;

ALTER TABLE orders_products
ADD CONSTRAINT fk_order_id
FOREIGN KEY(order_id)
REFERENCES orders(id)
ON DELETE RESTRICT 
ON UPDATE RESTRICT;

ALTER TABLE orders_products
ADD CONSTRAINT fk_order_product_id
FOREIGN KEY(product_id)
REFERENCES products(id)
ON DELETE RESTRICT 
ON UPDATE RESTRICT;

Нужно заполнить таблицы заказами и их позициями
Но сначало
ALTER TABLE orders_products DROP id;
ALTER TABLE orders_products 
DROP PRIMARY KEY,
ADD PRIMARY KEY(order_id, product_id);

Заполним табл. orders и orders_products из заказа.
INSERT INTO orders(user_id)
VALUES (50); 

INSERT INTO orders(user_id)
VALUES
(1), - Клиент 1
(3), - клиент 2
(8); - клиент 3

INSERT INTO orders_products(order_id, product_id)
VALUES
(1, 1),
(1, 1); 

товары заказанные клиентом 1
INSERT INTO orders_products(order_id, product_id)
VALUES
(1, 1),
(1, 2);

товары заказанные клиентом 2
INSERT INTO orders_products(order_id, product_id)
VALUES
(2, 1),
(2, 2);

товары заказанные клиентом 3
INSERT INTO orders_products(order_id, product_id, total)
VALUES
(4, 1, 1),
(4, 4, 3),
(4, 5, 2);


SELECT 
u.id AS user_id, u.name,
o.id AS order_id
FROM 
users AS u
RIGHT JOIN
orders AS o 
ON
u.id = o.user_id;


2)Выведите список товаров products и разделов catalogs, который соответствует товару.
SELECT 
p.id, p.name, p.price,
c.id AS cat_id,
c.name AS catalog
FROM
products AS p
JOIN
catalogs AS c
ON 
p.catalog_id = c.id; 


3)(по желанию) Есть таблица рейсов flights (id, from, to) и таблица городов cities (label, name).Поля from, to и label содержат английские названия городов, поле name — русское.
Выведите список рейсов (flights) с русскими названиями городов.
сначало
CREATE TABLE IF NOT EXISTS flights(
id SERIAL PRIMARY KEY,
`from` VARCHAR(50) NOT NULL COMMENT 'en', 
`to` VARCHAR(50) NOT NULL COMMENT 'en'
);

CREATE TABLE  IF NOT EXISTS cities(
label VARCHAR(50) PRIMARY KEY COMMENT 'en', 
name VARCHAR(50) COMMENT 'ru'
);

ALTER TABLE flights
ADD CONSTRAINT fk_from_label
FOREIGN KEY(`from`)
REFERENCES cities(label);

ALTER TABLE flights
ADD CONSTRAINT fk_to_label
FOREIGN KEY(`to`)
REFERENCES cities(label);

INSERT INTO cities VALUES
('Moscow', 'Москва'),
('irkutsk', 'Иркутск'),
('novgorod', 'Новгород'),
('kazan', 'Казань'),
('Omsk', 'Омск');

INSERT INTO flights VALUES
(NULL, 'moscow', 'omsk'),
(NULL, 'novgorod', 'kazan'),
(NULL, 'irkutsk', 'moscow'),
(NULL, 'omsk', 'irkutsk'),
(NULL, 'moscow', 'kazan');

SELECT
	id AS flight_id,
	(SELECT name FROM cities WHERE label = `from`) AS `from`,
	(SELECT name FROM cities WHERE label = `to`) AS `to`
FROM
	flights
ORDER BY
	flight_id;

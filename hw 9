1)В базе данных shop и sample присутствуют одни и те же таблицы, учебной базы данных. Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. 
Используйте транзакции
use shop;
SELECT * FROM users;
START TRANSACTION;
INSERT INTO sample.users SELECT * FROM shop_online.users WHERE id = 1;
COMMIT;
SELECT * FROM users;

2)Создайте представление, которое выводит название name товарной позиции из таблицы products и соответствующее название каталога name из таблицы catalogs.      
CREATE OR REPLACE VIEW prods_desc(prod_id, prod_name, cat_name) AS
SELECT p.id AS prod_id, p.name, cat.name
FROM products AS p
LEFT JOIN catalogs AS cat 
ON p.catalog_id = cat.id;
SELECT * FROM prods_desc;

3)по желанию) Пусть имеется таблица с календарным полем created_at. В ней размещены разряженые календарные записи за 
август 2018 года '2018-08-01', '2016-08-04', '2018-08-16' и 2018-08-17. Составьте запрос, который выводит полный список дат за август,
выставляя в соседнем поле значение 1, если дата присутствует в исходном таблице и 0, если она отсутствует.
use shop_online;
DROP TABLE IF EXISTS datetbl;
CREATE TABLE datetbl(
created_at DATE
);
INSERT INTO datetbl VALUES
('2018-08-01'),
('2018-08-04'),
('2018-08-16'),
('2018-08-17');
SELECT * FROM datetbl ORDER BY created_at;
SELECT 
time_period.selected_date AS day,
(SELECT EXISTS(SELECT * FROM datetbl WHERE created_at = day)) AS has_already
FROM
(SELECT v.* FROM 
(SELECT ADDDATE('1970-01-01',t4.i*10000 + t3.i*1000 + t2.i*100 + t1.i*10 + t0.i) selected_date FROM
(SELECT 0 i UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) t0,
(SELECT 0 i UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) t1,
(SELECT 0 i UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) t2,
(SELECT 0 i UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) t3,
(SELECT 0 i UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) t4) v
WHERE selected_date BETWEEN '2018-08-01' AND '2018-08-31') AS time_period; 
  
Практическое задание по теме “Хранимые процедуры и функции, триггеры"
1)Создайте хранимую функцию hello(), которая будет возвращать приветствие, в зависимости от текущего времени суток. 
С 6:00 до 12:00 функция должна возвращать фразу "Доброе утро", с 12:00 до 18:00 функция должна возвращать фразу "Добрый день", 
с 18:00 до 00:00 — "Добрый вечер", с 00:00 до 6:00 — "Доброй ночи".
use shop;
drop function if exists hello;
delimiter /
create function hello (value time)
returns varchar(255) deterministic
begin
declare greeting varchar(255);
if (time(value) between '00:00:00' and '06:00:00') then 
set greeting = 'Доброй ночи';
elseif (time(value) between '06:00:00' and '12:00:00') then
set greeting = 'Доброе утро';
elseif (time(value) between '12:00:00' and '18:00:00') then
set greeting = 'Добрый день';
else 
set greeting = 'Добрый вечер';
end if;
return greeting;
end/
delimiter;
select hello(time(now())) as 'Приветствие';

2)В таблице products есть два текстовых поля: name с названием товара и description с его описанием. 
Допустимо присутствие обоих полей или одно из них. Ситуация, когда оба поля принимают неопределенное значение NULL неприемлема. 
Используя триггеры, добейтесь того, чтобы одно из этих полей или оба поля были заполнены. При попытке присвоить полям NULL-значение необходимо отменить операцию.
drop trigger if exists check_products_insert;
delimiter/
create trigger check_products_insert before insert on products
for each row
begin
if (new.name is null) and (new.description is null) then 
set new.name = 'default_name', new.description = 'default_text';
end if;
end/
delimiter;

drop trigger if exists check_products_update;
delimiter/
create trigger check_products_update before update on products
for each row
begin
if (new.name is null) and (new.description is null) then 
signal sqlstate '45000' set message_text = 'update canceled'; 
end if;
end/
delimiter;
show triggers;

3)(по желанию) Напишите хранимую функцию для вычисления произвольного числа Фибоначчи. Числами Фибоначчи называется последовательность в которой 
число равно сумме двух предыдущих чисел. Вызов функции FIBONACCI(10) должен возвращать число 55.
delimiter /
create procedure rec_fib(num INT, OUT result INT)
begin
declare num_1 INT;
declare num_2 INT;
if (num=0) THEN
set result=0;
else if (num=1) then
set result=1;
else
call rec_fib(num-1,num_1);
call rec_fib(num-2,num_2);
set result=(num_1 + num_2);
end if;
end/
delimiter;






